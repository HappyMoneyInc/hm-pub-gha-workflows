name: Build Docker image

on:
  workflow_call:
    inputs:
      ROLE_TO_ASSUME:
        required: true
        type: string
        description: "The new artifact version"
jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: ECR access
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 730502903637.dkr.ecr.us-east-1.amazonaws.com
          echo "CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain happymoney --domain-owner 730502903637 --query authorizationToken --output text`" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Build without push
        uses: docker/build-push-action@v3
        with:
          build-args: |
            CODEARTIFACT_AUTH_TOKEN=${{ env.CODEARTIFACT_AUTH_TOKEN }}
            APP_VERSION=experimental
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache